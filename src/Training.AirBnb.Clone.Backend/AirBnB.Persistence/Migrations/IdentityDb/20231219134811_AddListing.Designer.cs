// <auto-generated />
using System;
using AirBnB.Persistence.DataContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AirBnB.Persistence.Migrations.IdentityDb
{
    [DbContext(typeof(IdentityDbContext))]
    [Migration("20231219134811_AddListing")]
    partial class AddListing
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("identity")
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AirBnB.Domain.Entities.Listing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AvailabilityId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DescriptionId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("HostId")
                        .HasColumnType("uuid");

                    b.Property<bool>("InstantBook")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("PropertyTypeId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("RulesId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.ToTable("Listings", "identity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ac1645ba-d1a8-4449-a4c3-eea260ca1fde"),
                            AvailabilityId = new Guid("f0ca3288-d1c8-40e0-9fc6-43c57a11acac"),
                            DescriptionId = new Guid("509c4df8-549d-4ad6-a3fb-58c96f40fc9f"),
                            HostId = new Guid("4a9c647e-dc43-47fe-a7ee-7d16e4077db6"),
                            InstantBook = true,
                            IsDeleted = false,
                            LocationId = new Guid("4391e832-5f7a-42c9-8ed0-fa8c092577b6"),
                            Price = 99.333m,
                            PropertyTypeId = new Guid("a152ab83-27d1-4809-9f42-d1b267b631ee"),
                            RulesId = new Guid("1857ea6b-2431-4595-afa8-23e149567622"),
                            Status = 2,
                            Title = "FirstSeedData"
                        });
                });

            modelBuilder.Entity("AirBnB.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmailAddress")
                        .IsUnique();

                    b.ToTable("Users", "identity");
                });
#pragma warning restore 612, 618
        }
    }
}
